{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "TV Library Backend",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation for TV Library Server based on the OpenAPI 3.0 specification. \nSome useful links:\n- [TV Library Backend repository](https://github.com/DmytriiTsybuliak/movies-library-backend)\n- [The source API definition for the TV Library Backend](https://github.com/DmytriiTsybuliak/movies-library-backend/src/docs/openapi.yaml)"
  },
  "servers": [
    {
      "url": "https://movies-library-backend-s1fd.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Favorite",
      "description": "List of saved movies and TV shows for users."
    },
    {
      "name": "Auth",
      "description": "Operations about user."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create User",
        "description": "Creation on new user",
        "operationId": "reqUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created user"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "format": "int64",
                          "example": "34e4decdd286b30065d54af9"
                        },
                        "email": {
                          "type": "string",
                          "example": "john@email.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        },
        "security": []
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "34e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Password is not correct!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized. Password is not correct!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User with this email not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with this email not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "Something went wrong"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "description": "Refreshes the user's session by generating a new access token and refresh token. Requires `sessionId` and `refreshToken` cookies to be present.",
        "operationId": "refreshUserSession",
        "requestBody": {
          "description": "Session and refresh tokens are required as cookies.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "example": "abcd1234"
                  },
                  "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error (invalid or expired refresh token/session)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "error": {
                      "type": "string",
                      "example": "Session token expired or session not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/auth/request-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request reset password via email",
        "description": "",
        "operationId": "resetEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "todd_zarneki@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User with this email not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "error"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with this email not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "description": "",
        "operationId": "resetPassword",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "jwt token from the link of email"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "12345678",
                    "description": "new password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User with this email not found / New password must not match the old one",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    },
                    "error": {
                      "type": "string",
                      "example": "User with this email not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/get-oauth-url": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Getting Google OAuth url",
        "description": "",
        "operationId": "oauthURL",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth url!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://accounts.google.com/o/oauth2/v2/auth..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong"
          }
        },
        "security": []
      }
    },
    "/auth/confirm-google-auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login via Google OAuth",
        "description": "",
        "operationId": "loginUserGoogle",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string"
            },
            "required": true,
            "example": "0A11nS0Yb5ry2Cg...."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in via Google OAuth!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "34e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Something went wrong"
          }
        },
        "security": []
      }
    },
    "/favorite": {
      "get": {
        "tags": [
          "Favorite"
        ],
        "summary": "Finds Favorites",
        "description": "Finds Favorites by user",
        "operationId": "getFavorites",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found favorites"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/favorite"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Favorite"
        ],
        "summary": "Add Favorite",
        "description": "Add movie or TV to the favorite list",
        "operationId": "addFavorites",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/favorite"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added favorite"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/favorite"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/favorite/{favoriteID}": {
      "delete": {
        "tags": [
          "Favorite"
        ],
        "summary": "Delete Favorite",
        "description": "Delete movie or TV from the favorite list",
        "operationId": "delFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "favoriteID",
            "description": "favoriteID to Delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Favorite item not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionId"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "type": "integer",
            "format": "int64",
            "example": "34e4decdd286b30065d54af9"
          },
          "name": {
            "type": "string",
            "example": "Alex Brown"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          },
          "gender": {
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "male"
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/dztvd7emk/image/upload/v1722885715/xc2jhivn8gspetouuroy.jpg"
          }
        }
      },
      "favorite": {
        "type": "object",
        "required": [
          "movieId",
          "title",
          "releaseDate",
          "genre",
          "type",
          "userId"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "34e4decdd286b30065d54af9"
          },
          "movieId": {
            "description": "Movie/TV ID for TMB API",
            "type": "string",
            "example": "6744b9fa34234548ecf5ffeb"
          },
          "title": {
            "description": "Movie/TV title",
            "type": "string",
            "example": "Deadpool"
          },
          "releaseDate": {
            "description": "Movie/TV releaseDate",
            "type": "string",
            "example": "2025"
          },
          "genre": {
            "description": "Movie/TV genre",
            "type": "string",
            "example": "Action"
          },
          "type": {
            "description": "Movie or TV",
            "type": "string",
            "example": "Movie"
          },
          "userId": {
            "description": "User ID of user",
            "type": "string",
            "example": "6744b9fa34234548ecf5ffeb"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "\\\"email\\\" is required"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Authorization information is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email in use"
                }
              }
            }
          }
        }
      }
    }
  }
}